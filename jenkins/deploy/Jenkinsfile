pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: "5"))
        timeout time: 60, unit: "MINUTES"
    }

    stages {
        stage("Test") {
            steps {
                configFileProvider([configFile(fileId: "iis-build-properties", variable: 'BUILD_PROPERTIES')]) {
                    load "${BUILD_PROPERTIES}"
                    withEnv(["JAVA_HOME=${ tool type: 'jdk', name: "$JDK_VERSION" }",
                             "PATH+MAVEN=${tool type: 'maven', name: "$MAVEN_VERSION"}/bin:${env.JAVA_HOME}/bin"]) {
                        sh """
                            mvn clean test
                        """
                    }
                }
            }
        }

        stage("Install") {
            steps {
                configFileProvider([configFile(fileId: "iis-build-properties", variable: 'BUILD_PROPERTIES')]) {
                    load "${BUILD_PROPERTIES}"
                    withEnv(["JAVA_HOME=${ tool type: 'jdk', name: "${JDK_VERSION}" }",
                             "PATH+MAVEN=${tool type: 'maven', name: "${MAVEN_VERSION}"}/bin:${env.JAVA_HOME}/bin"]) {
                        sh """
                            mvn clean install -DskipTests
                        """
                    }
                }
            }
        }

        stage("Deploy") {
            steps {
                configFileProvider([configFile(fileId: "iis-build-properties", variable: 'BUILD_PROPERTIES')]) {
                    load "${BUILD_PROPERTIES}"
                    withEnv(["JAVA_HOME=${ tool type: 'jdk', name: "${JDK_VERSION}" }",
                             "PATH+MAVEN=${tool type: 'maven', name: "${MAVEN_VERSION}"}/bin:${env.JAVA_HOME}/bin"]) {
                        sshagent(['iis-deployment-credentials']) {
                            sh """
                                cd iis-wf/iis-wf-primary && \
                                mvn clean package -Poozie-package,deploy \
                                    -Dworkflow.source.dir=eu/dnetlib/iis/wf/primary/main \
                                    -DiisConnectionProperties=${WORKSPACE}/connection-properties/iis-cdh5-test-gw.properties
                            """
                        }
                    }
                }
            }
        }

        stage("Release") {
            steps {
                load "${WORKSPACE}/connection-properties/iis-cdh5-test-gw.properties"
                sshagent(['iis-deployment-credentials']) {
                    sh """
                        WORKING_DIR=/tmp/${iis.hadoop.frontend.user.name}/`date +%Y-%m-%d` && \
                        ssh -o StrictHostKeyChecking=no ${iis.hadoop.frontend.user.name}@${iis.hadoop.frontend.host.name} "\
                            rm -rf \${WORKING_DIR} && \
                            mkdir -p \${WORKING_DIR}
                            " && \
                        scp -r ${WORKSPACE}/jenkins/deploy/ ${iis.hadoop.frontend.user.name}@${iis.hadoop.frontend.host.name}:\${WORKING_DIR} && \
                        ssh -o StrictHostKeyChecking=no ${iis.hadoop.frontend.user.name}@${iis.hadoop.frontend.host.name} "\
                            cd \${WORKING_DIR}/deploy && \
                            sh deploy_release.sh
                            "
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
