pipeline {
    agent any

    triggers {
        cron("H H(0-3) * * 2-6")
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "2"))
        timeout time: 60, unit: "MINUTES"
    }

    stages {
        stage("Install") {
            steps {
                configFileProvider([configFile(fileId: "iis-build-properties", variable: 'BUILD_PROPERTIES')]) {
                    load "${BUILD_PROPERTIES}"
                    withEnv(["JAVA_HOME=${ tool type: 'jdk', name: "${JDK_VERSION}" }",
                             "PATH+MAVEN=${tool type: 'maven', name: "${MAVEN_VERSION}"}/bin:${env.JAVA_HOME}/bin"]) {
                        sshagent(['iis-test-credentials']) {
                            sh """
                                mvn clean install \
                                    -Djava.net.preferIPv4Stack=true \
                                    -DiisConnectionProperties=${WORKSPACE}/connection-properties/iis-ci-test.properties \
                                    -Doutput.dir.name=integration-test \
                                    -Djacoco.skip=true
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            warnings canComputeNew: false, canResolveRelativePaths: false, categoriesPattern: '', consoleParsers: [[parserName: 'Maven'], [parserName: 'Java Compiler (javac)']], defaultEncoding: '', excludePattern: '', healthy: '', includePattern: '', messagesPattern: '', unHealthy: ''
            cleanWs()
        }

        failure {
            emailext (
                subject: "Build failed in Jenkins: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "Failed job '${env.JOB_NAME}' #${env.BUILD_NUMBER}: check console output at ${env.BUILD_URL}.",
                recipientProviders:  [developers()]
            )
        }
    }
}
