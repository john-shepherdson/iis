<?xml version="1.0"?>
<!-- TODO MiconCodeReview: Can't see anything like that in this file :). Shouldn't this comment go into the main workflow? -->
<!-- Note that documentation placed in comments in this file uses the
"markdown" syntax (along with division into sections). -->
<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-citationmatching_main_workflow">
    <parameters>
        <property>
            <name>reduceTasks</name>
            <value>2</value>
        </property>
    </parameters>

    <start to="data_producer" />

    <action name="data_producer">
        <java>
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${workingDir}/data_producer" />
                <mkdir path="${nameNode}${workingDir}/data_producer" />
            </prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <!-- This is simple wrapper for the Java code -->
            <main-class>eu.dnetlib.iis.core.java.ProcessWrapper</main-class>
            <!-- The business Java code that gets to be executed -->
            <arg>eu.dnetlib.iis.workflows.citationmatching.converter.DocumentAvroDatastoreProducer</arg>
            <!-- All input and output ports have to be bound to paths in HDFS -->
            <arg>-Odocument=${workingDir}/data_producer/document</arg>
        </java>
        <ok to="chain" />
        <error to="fail" />
    </action>
    
    <action name="chain">
        <sub-workflow>
            <app-path>${wf:appPath()}/chain</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>input</name>
                    <value>${workingDir}/data_producer/document</value>
                </property>
                <property>
                    <name>output</name>
                    <value>${workingDir}/citation</value>
                </property>
                <property>
                    <name>workingDir</name>
                    <value>${workingDir}/chain</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="consumer"/>
        <error to="fail"/>
    </action>

	<action name="consumer">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queueName}</value>
				</property>
			</configuration>
			<!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.core.java.ProcessWrapper</main-class>
			<!-- The business Java code that gets to be executed -->
			<arg>eu.dnetlib.iis.core.java.jsonworkflownodes.TestingConsumer</arg>
			<!-- Specification of the input ports -->
			<arg>-C{citation,
				eu.dnetlib.iis.citationmatching.schemas.Citation,
				eu/dnetlib/iis/workflows/citationmatching/main_workflow/data/citation.json}</arg>
			<arg>-Icitation=${workingDir}/citation</arg>
		</java>
		<ok to="end" />
		<error to="fail" />
	</action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    <end name="end" />
</workflow-app>
