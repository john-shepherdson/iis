<workflow-app xmlns="uri:oozie:workflow:0.4" name="citationmatching_direct">

	<parameters>
		<property>
			<name>workingDir</name>
			<description>directory for temporary workflow data</description>
		</property>
		<property>
			<name>input</name>
			<description>input containing document metadata records</description>
		</property>
		<property>
			<name>output</name>
			<description>extracted citations</description>
		</property>
	</parameters>

	<start to="generate-schema" />

	<action name="generate-schema">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<main-class>eu.dnetlib.iis.core.javamapreduce.hack.AvroSchemaGenerator
			</main-class>
			<arg>eu.dnetlib.iis.citationmatching.direct.schemas.DocumentMetadata
			</arg>
			<arg>eu.dnetlib.iis.citationmatching.direct.schemas.Citation</arg>
			<capture-output />
		</java>
		<ok to="transformer" />
		<error to="fail" />
	</action>

	<action name="transformer">
		<spark xmlns="uri:oozie:spark-action:0.1">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/transformer_output" />
			</prepare>

			<master>yarn-cluster</master>
			<mode>cluster</mode>
			<name>citationmatching_direct_input_transformer</name>
			<class>eu.dnetlib.iis.workflows.citationmatching.direct.CitationMatchingDirectInputTransformer
			</class>
			<jar>${oozieTopWfApplicationPath}/lib/${projectJarFileName}.jar</jar>

			<arg>-inputAvroPath=${input}</arg>
			<arg>-outputAvroPath=${workingDir}/transformer_output</arg>

		</spark>
		<ok to="citationmatching-direct" />
		<error to="fail" />
	</action>

	<action name="citationmatching-direct">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${output}" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queueName}</value>
				</property>
			</configuration>
			<!-- Path to PIG script the workflow executes. -->
			<script>lib/scripts/transformer/transformer.pig</script>

			<param>input=${workingDir}/transformer_output</param>
			<param>schema_input=${wf:actionData('generate-schema')['eu.dnetlib.iis.citationmatching.direct.schemas.DocumentMetadata']}
			</param>

			<param>output=${output}</param>
			<param>schema_output=${wf:actionData('generate-schema')['eu.dnetlib.iis.citationmatching.direct.schemas.Citation']}
			</param>
		</pig>
		<ok to="end" />
		<error to="fail" />
	</action>
	
	<kill name="fail">
		<message>Unfortunately, the workflow failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]
		</message>
	</kill>
	<end name="end" />
</workflow-app>
