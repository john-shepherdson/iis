<workflow-app xmlns="uri:oozie:workflow:0.4" name="mainworkflows_primary_main">

	<parameters>
		<property>
			<name>remove_sideproducts</name>
			<value>true</value>
			<description>flag indicating inference side products will be erased</description>
		</property>
		<property>
			<name>match_content_with_metadata</name>
			<value>true</value>
			<description>flag indicating contents should be filtered and their identifiers should be deduplicated against metadata entries retrieved from InformationSpace.
				This way only contents having metadata
				representation will be processed.
				To be disabled when processing new contents which metadata is not available in hbase or when original identifiers should be preserved (contents will not be
				filtered as well).
			</description>
		</property>
		<!-- processing modes -->
		<property>
			<name>active_metadataextraction_export</name>
			<value>false</value>
			<description>flag indicating metadata extraction export should be enabled</description>
		</property>
		<property>
			<name>active_referenceextraction_project</name>
			<value>false</value>
			<description>flag indicating project reference extraction should be enabled</description>
		</property>
		<property>
			<name>active_referenceextraction_dataset</name>
			<value>false</value>
			<description>flag indicating dataset reference extraction should be enabled</description>
		</property>
		<property>
			<!-- currently disabled by default -->
			<name>active_referenceextraction_researchinitiative</name>
			<value>false</value>
			<description>flag indicating researchinitiative reference extraction should be enabled</description>
		</property>
		<property>
			<!-- currently disabled by default -->
			<name>active_referenceextraction_pdb</name>
			<value>false</value>
			<description>flag indicating protein databank reference extraction should be enabled</description>
		</property>
		<property>
			<name>active_documentsclassification</name>
			<value>false</value>
			<description>flag indicating documents classification should be enabled</description>
		</property>
		<property>
			<name>active_documentssimilarity</name>
			<value>false</value>
			<description>flag indicating documents similarity should be enabled</description>
		</property>
		<property>
			<name>active_citationmatching</name>
			<value>false</value>
			<description>flag indicating citation matching should be enabled</description>
		</property>
		<property>
			<name>active_export_to_actionmanager</name>
			<value>true</value>
			<description>flag indicating export to action manager should be performed</description>
		</property>
		<property>
			<name>active_export_to_json</name>
			<value>false</value>
			<description>flag indicating json export should be performed</description>
		</property>
		<!-- import concepts related -->
		<property>
			<name>import_islookup_service_location</name>
			<description>IS Lookup service location</description>
		</property>
		<property>
			<name>import_project_concepts_context_ids_csv</name>
			<value>fet-fp7,fet-h2020</value>
			<description>comma separated list of concepts context identifiers to be picked by ISLookup</description>
		</property>
		<!-- import metadata related -->
		<property>
			<name>import_hbase_input_table</name>
			<value>db_openaireplus_services_from_dump</value>
			<description>HBase input table holding InformationSpace, available on local cluster</description>
		</property>
		<property>
			<name>import_hbase_dump_location</name>
			<value>$UNDEFINED$</value>
			<description>HBase dump location, usually points to remote cluster HDFS location.
				Import will be omitted when set to $UNDEFINED$ value.
			</description>
		</property>
		<property>
			<name>import_hbase_approved_datasources_csv</name>
			<value>$UNDEFINED$</value>
			<description>CSV list of datasource ids to be approved during import. Applied on result and person entities.</description>
		</property>
		<!-- import datacite related -->
		<property>
			<name>import_mdstore_service_location</name>
			<value>$UNDEFINED$</value>
			<description>MDStore service (not WSDL) location URL</description>
		</property>
		<property>
			<name>import_dataset_mdstore_ids_csv</name>
			<value>$UNDEFINED$</value>
			<description>MDStore identifier</description>
		</property>
		<!-- import content related -->
		<property>
			<name>import_content_object_store_location</name>
			<value>$UNDEFINED$</value>
			<description>object store service location required for content retrieval</description>
		</property>
		<property>
			<name>import_content_objectstores_csv</name>
			<value>$UNDEFINED$</value>
			<description>CSV list of object stores identifiers to be processed</description>
		</property>
		<property>
			<name>import_content_mimetypes_pdf</name>
			<value>pdf,application/pdf</value>
			<description>pdf mime types</description>
		</property>
		<property>
			<name>import_content_mimetypes_text</name>
			<value>text,text/plain</value>
			<description>text mime types</description>
		</property>
		<property>
			<name>import_content_mimetypes_html</name>
			<value>text/html</value>
			<description>html mime types</description>
		</property>
		<property>
			<name>import_content_mimetypes_xml_pmc</name>
			<value>xml</value>
			<description>xml pmc types</description>
		</property>
		<property>
			<name>import_content_mimetypes_wos</name>
			<value>file::WoS</value>
			<description>WoS types</description>
		</property>
		<!-- import timeouts related -->
		<property>
			<name>import_resultset_client_read_timeout</name>
			<value>60000</value>
			<description>resultset client read timeout</description>
		</property>
		<property>
			<name>import_content_connection_timeout</name>
			<value>60000</value>
			<description>import content connection timeout</description>
		</property>
		<property>
			<name>import_content_read_timeout</name>
			<value>60000</value>
			<description>import content read timeout</description>
		</property>
		<property>
			<name>text_xml_max_file_size_mb</name>
			<value>2</value>
			<description>maximum allowed xml or text file size in Megabytes</description>
		</property>
		<!-- metadata extraction related -->
		<property>
			<name>metadataextraction_excluded_checksums</name>
			<value>$UNDEFINED$</value>
			<description>list of content checksums excluded from metadataextraction processing</description>
		</property>
		<property>
			<name>pdf_max_file_size_mb</name>
			<value>500</value>
			<description>maximum allowed pdf file size in Megabytes</description>
		</property>
		<property>
			<name>metadataextraction_default_cache_location</name>
			<value>/cache/metadataextraction</value>
			<description>metadata extraction HDFS cache location</description>
		</property>
		<property>
			<name>metadataextraction_processing_mode</name>
			<value>StreamingMetadataExtractorMapper</value>
			<description>metadata extraction processing mode</description>
		</property>
		<property>
			<name>metadataextraction_input_classname</name>
			<value>eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl</value>
			<description>metadata extraction input classname</description>
		</property>
		<!-- project reference extraction related -->
		<property>
			<name>referenceextraction_project_fundingclass_blacklist_regex</name>
			<value>a^</value>
			<description>regexp matching funding class, describes projects which
				should be ignored by reference extraction algorithm.
				Set to 'a^' by default to guarantee nothing will be matched.
			</description>
		</property>
		<!-- export related -->
		<property>
			<name>export_action_hbase_table_name</name>
			<description>action manager hbase table name</description>
		</property>
		<property>
			<name>export_action_hbase_table_initialize</name>
			<description>flag indicating input table should be initialized</description>
		</property>
		<!-- action set id properties -->
		<property>
			<name>export_action_set_id</name>
			<value>$UNDEFINED$</value>
			<description>action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_similarities_standard</name>
			<value>$UNDEFINED$</value>
			<description>document_similarities_standard action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_classes</name>
			<value>$UNDEFINED$</value>
			<description>document_classes action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_referencedProjects</name>
			<value>$UNDEFINED$</value>
			<description>document_referencedProjects action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_referencedDatasets</name>
			<value>$UNDEFINED$</value>
			<description>document_referencedDatasets action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_referencedDocuments</name>
			<value>$UNDEFINED$</value>
			<description>document_referencedDocuments action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_research_initiative</name>
			<value>$UNDEFINED$</value>
			<description>document research initiative action-set identifier of exported data</description>
		</property>
		<property>
			<name>export_action_set_id_document_pdb</name>
			<value>$UNDEFINED$</value>
			<description>document to protein databank action-set identifier of exported data</description>
		</property>
		<!-- -->
		<property>
			<name>export_action_set_id_entity_dataset</name>
			<value>$UNDEFINED$</value>
			<description>action-set identifier of exported data containing dataset entities</description>
		</property>
		<property>
			<name>hbase_remote_zookeeper_quorum</name>
			<description>hbase zookeeper quorum, have to be provided explicitly</description>
		</property>
		<property>
			<name>hbase_remote_zookeeper_clientport</name>
			<description>external hbase zookeeper client port, have to be provided explicitly</description>
		</property>
		<!-- trust level threshold section -->
		<property>
			<name>export_trust_level_threshold</name>
			<value>$UNDEFINED$</value>
			<description>default trust level threshold of exported data</description>
		</property>
		<property>
			<name>export_trust_level_threshold_document_classes</name>
			<value>$UNDEFINED$</value>
			<description>document_classes trust level threshold</description>
		</property>
		<property>
			<name>export_trust_level_threshold_document_referencedProjects</name>
			<value>$UNDEFINED$</value>
			<description>document_referencedProjects trust level threshold</description>
		</property>
		<property>
			<name>export_trust_level_threshold_document_referencedDatasets</name>
			<value>$UNDEFINED$</value>
			<description>document_referencedDatasets trust level threshold</description>
		</property>
		<property>
			<name>export_trust_level_threshold_document_pdb</name>
			<value>$UNDEFINED$</value>
			<description>document to protein databank trust level threshold</description>
		</property>
		<!-- -->
		<property>
			<name>export_documentssimilarity_threshold</name>
			<value>$UNDEFINED$</value>
			<description>documents similarity threshold value below which similarity export is omitted</description>
		</property>
		<property>
			<name>export_referenceextraction_pdb_url_root</name>
			<value>http://www.rcsb.org/pdb/explore/explore.do?structureId=</value>
			<description>protein databank URL root part to be concatenated with pdb identifier when forming final URL</description>
		</property>
		<property>
			<name>output_remote_location</name>
			<value>$UNDEFINED$</value>
			<description>optional remote cluster output location where inference output dump should be distcped as sequence files.
				When not specified results will be exported straight to the ActionManager HBase.
			</description>
		</property>
		<!-- working directory related -->
		<property>
			<name>execution_environment</name>
			<value>primary</value>
			<description>execution environment used for workingDir creation</description>
		</property>
		<property>
			<name>workingDir</name>
			<value>/user/${user.name}/iis/working_dirs/${execution_environment}</value>
			<description>working directory</description>
		</property>
	</parameters>

	<global>
		<job-tracker>${jobTracker}</job-tracker>
		<name-node>${nameNode}</name-node>
		<configuration>
			<property>
				<name>mapred.job.queue.name</name>
				<value>${queueName}</value>
			</property>
		</configuration>
	</global>

	<start to="init-workingDir" />

	<action name="init-workingDir">
		<fs>
			<delete path="${nameNode}${workingDir}" />
			<mkdir path="${nameNode}${workingDir}" />
		</fs>
		<ok to="copy-version" />
		<error to="fail" />
	</action>

	<action name="copy-version">
		<distcp xmlns="uri:oozie:distcp-action:0.1">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<arg>${wf:appPath()}/version.properties</arg>
			<arg>${nameNode}${workingDir}</arg>
		</distcp>
		<ok to="decision-import_hbase_dump" />
		<error to="fail" />
	</action>

	<decision name="decision-import_hbase_dump">
		<switch>
			<case to="import">${import_hbase_dump_location eq "$UNDEFINED$"}</case>
			<default to="distcp_hbase_dump" />
		</switch>
	</decision>

	<!-- importing hbase dump from remote cluster -->
	<action name="distcp_hbase_dump">
		<distcp xmlns="uri:oozie:distcp-action:0.1">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<arg>-pb</arg>
			<arg>${import_hbase_dump_location}</arg>
			<arg>${nameNode}${workingDir}/hbase_dump</arg>
		</distcp>
		<ok to="truncate_hbase_table" />
		<error to="fail" />
	</action>

	<action name="truncate_hbase_table">
		<shell xmlns="uri:oozie:shell-action:0.1">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queueName}</value>
				</property>
			</configuration>
			<exec>sh</exec>
			<argument>truncate_hbase_table.sh</argument>
			<argument>${import_hbase_input_table}</argument>
			<file>import_hbasedump/scripts/truncate_hbase_table.sh</file>
		</shell>
		<ok to="import_hbase_dump" />
		<error to="fail" />
	</action>

	<action name="import_hbase_dump">
		<sub-workflow>
			<app-path>${wf:appPath()}/import_hbasedump</app-path>
			<propagate-configuration />
			<configuration>
				<property>
					<name>input</name>
					<value>${workingDir}/hbase_dump</value>
				</property>
				<property>
					<name>output_table_name</name>
					<value>${import_hbase_input_table}</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="purge_hbase_dump" />
		<error to="fail" />
	</action>

	<action name="purge_hbase_dump">
		<fs>
			<delete path="${nameNode}${workingDir}/hbase_dump" />
		</fs>
		<ok to="import" />
		<error to="fail" />
	</action>
	<!-- end of importing hbase dump from remote cluster -->

	<action name="import">
		<sub-workflow>
			<app-path>${wf:appPath()}/mainworkflows_common_import</app-path>
			<propagate-configuration />
			<configuration>
				<property>
					<name>workingDir</name>
					<value>${workingDir}/mainworkflows_common_import/working_dir
					</value>
				</property>
				<!-- importing modes -->
				<property>
					<name>match_content_with_metadata</name>
					<value>${match_content_with_metadata}</value>
				</property>
				<property>
					<name>active_import_metadata</name>
					<value>true</value>
				</property>
				<property>
					<name>active_import_dataset</name>
					<value>${active_referenceextraction_dataset}</value>
				</property>
				<property>
					<name>active_import_concept</name>
					<value>${active_referenceextraction_project}</value>
				</property>
				<property>
					<name>active_ingest_pmc</name>
					<!-- enabling when either citation matching is enabled or metadata export which may include pmc affiliations -->
					<value>${active_citationmatching eq "true" or active_metadataextraction_export eq "true"}</value>
				</property>
				<!-- import metadata related -->
				<property>
					<name>hbase_input_table</name>
					<value>${import_hbase_input_table}</value>
				</property>
				<property>
					<name>hbase_approved_datasources_csv</name>
					<value>${import_hbase_approved_datasources_csv}</value>
				</property>
				<!-- import datacite related -->
				<property>
					<name>mdstore_service_location</name>
					<value>${import_mdstore_service_location}</value>
				</property>
				<property>
					<name>dataset_mdstore_ids_csv</name>
					<value>${import_dataset_mdstore_ids_csv}</value>
				</property>
				<!-- project concept related -->
				<property>
					<name>islookup_service_location</name>
					<value>${import_islookup_service_location}</value>
				</property>
				<property>
					<name>project_concepts_context_ids_csv</name>
					<value>${import_project_concepts_context_ids_csv}</value>
				</property>
				<!-- import content related -->
				<property>
					<name>objectstore_service_location</name>
					<value>${import_content_object_store_location}</value>
				</property>
				<property>
					<name>approved_objectstores_csv</name>
					<value>${import_content_objectstores_csv}</value>
				</property>
				<property>
					<name>mimetypes_pdf</name>
					<value>${import_content_mimetypes_pdf}</value>
				</property>
				<property>
					<name>mimetypes_text</name>
					<value>${import_content_mimetypes_text}</value>
				</property>
				<property>
					<name>mimetypes_html</name>
					<value>${import_content_mimetypes_html}</value>
				</property>
				<property>
					<name>mimetypes_xml_pmc</name>
					<value>${import_content_mimetypes_xml_pmc}</value>
				</property>
				<property>
					<name>mimetypes_wos</name>
					<value>${import_content_mimetypes_wos}</value>
				</property>
				<!-- import timeouts related -->
				<property>
					<name>resultset_client_read_timeout</name>
					<value>${import_resultset_client_read_timeout}</value>
				</property>
				<property>
					<name>content_connection_timeout</name>
					<value>${import_content_connection_timeout}</value>
				</property>
				<property>
					<name>content_read_timeout</name>
					<value>${import_content_read_timeout}</value>
				</property>
				<!-- metadata extraction related are autmatically propagated -->
				<!-- metadatainput and metadataextraction output subdirectory names -->
				<property>
					<name>metadataimport_output_name_document_meta</name>
					<value>docmeta</value>
				</property>
				<property>
					<name>metadataimport_output_name_document_project</name>
					<value>docproject</value>
				</property>
				<property>
					<name>metadataimport_output_name_project</name>
					<value>project</value>
				</property>
				<property>
					<name>metadataimport_output_name_person</name>
					<value>person</value>
				</property>
				<property>
					<name>metadataimport_output_name_dedup_mapping</name>
					<value>dedupmapping</value>
				</property>
				<!-- output parameters -->
				<property>
					<name>output_extracted_document_metadata</name>
					<value>${workingDir}/mainworkflows_common_import/extracted_document_metadata</value>
				</property>
				<property>
					<name>output_metadataimport_root</name>
					<value>${workingDir}/mainworkflows_common_import/metadataimport</value>
				</property>
				<property>
					<name>output_dataset</name>
					<value>${workingDir}/mainworkflows_common_import/dataset</value>
				</property>
				<property>
					<name>output_dataset_to_mdstore</name>
					<value>${workingDir}/mainworkflows_common_import/dataset_to_mdstore</value>
				</property>
				<property>
					<name>output_document_text</name>
					<value>${workingDir}/mainworkflows_common_import/document-text</value>
				</property>
				<property>
					<name>output_project_concept</name>
					<value>${workingDir}/mainworkflows_common_import/project-concept</value>
				</property>
				<property>
					<name>output_wos</name>
					<value>${workingDir}/mainworkflows_common_import/wos</value>
				</property>
				<property>
					<name>output_faults</name>
					<value>${workingDir}/mainworkflows_common_import/faults</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="mainworkflows_primary_processing" />
		<error to="fail" />
	</action>

	<action name="mainworkflows_primary_processing">
		<sub-workflow>
			<app-path>${wf:appPath()}/mainworkflows_primary_processing</app-path>
			<propagate-configuration />
			<configuration>
				<property>
					<name>input_document_metadata</name>
					<value>${workingDir}/mainworkflows_common_import/metadataimport/docmeta
					</value>
				</property>
				<property>
					<name>input_document_to_project</name>
					<value>${workingDir}/mainworkflows_common_import/metadataimport/docproject
					</value>
				</property>
				<property>
					<name>input_document_text</name>
					<value>${workingDir}/mainworkflows_common_import/document-text
					</value>
				</property>
				<property>
					<name>input_document_text_wos</name>
					<value>${workingDir}/mainworkflows_common_import/wos</value>
				</property>
				<property>
					<name>input_project</name>
					<value>${workingDir}/mainworkflows_common_import/metadataimport/project
					</value>
				</property>
				<property>
					<name>input_person</name>
					<value>${workingDir}/mainworkflows_common_import/metadataimport/person
					</value>
				</property>
				<property>
					<name>input_dataset</name>
					<value>${workingDir}/mainworkflows_common_import/dataset</value>
				</property>
				<property>
					<name>input_extracted_document_metadata</name>
					<value>${workingDir}/mainworkflows_common_import/extracted_document_metadata</value>
				</property>
				<property>
					<name>input_project_concept</name>
					<value>${workingDir}/mainworkflows_common_import/project-concept</value>
				</property>
				<property>
					<name>output_document_to_project</name>
					<value>${workingDir}/exported/document_to_project</value>
				</property>
				<property>
					<name>output_document_to_project_concepts</name>
					<value>${workingDir}/exported/document_to_project_concepts</value>
				</property>
				<property>
					<name>output_document_to_dataset</name>
					<value>${workingDir}/exported/document_to_dataset</value>
				</property>
				<property>
					<name>output_document_to_research_initiatives</name>
					<value>${workingDir}/exported/document_to_research_initiatives
					</value>
				</property>
				<property>
					<name>output_document_to_pdb</name>
					<value>${workingDir}/exported/document_to_pdb</value>
				</property>
				<property>
					<name>output_document_to_document_classes</name>
					<value>${workingDir}/exported/document_to_document_classes</value>
				</property>
				<property>
					<name>output_citation</name>
					<value>${workingDir}/exported/citation</value>
				</property>
				<property>
					<name>output_document_similarity</name>
					<value>${workingDir}/exported/document_similarity</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="decision-transform-metadataextraction-for-export" />
		<error to="fail" />
	</action>

	<decision name="decision-transform-metadataextraction-for-export">
		<switch>
			<case to="transformers_export_documentmetadata">${active_metadataextraction_export eq "true"}</case>
			<default to="skip-transformers_export_documentmetadata" />
		</switch>
	</decision>

	<action name="transformers_export_documentmetadata">
		<sub-workflow>
			<app-path>${wf:appPath()}/transformers_export_documentmetadata</app-path>
			<propagate-configuration />
			<configuration>
				<property>
					<name>workingDir</name>
					<value>${workingDir}/transformers_export_documentmetadata/working_dir
					</value>
				</property>
				<property>
					<name>input_extracted_metadata</name>
					<value>${workingDir}/mainworkflows_common_import/extracted_document_metadata
					</value>
				</property>
				<property>
					<name>output_metadata</name>
					<value>${workingDir}/transformers_export_documentmetadata/output_metadata
					</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="decision-export-to-hbase" />
		<error to="fail" />
	</action>

	<action name="skip-transformers_export_documentmetadata">
		<java>
			<prepare>
				<!-- notice: directory have to aligned with skipped action output -->
				<delete path="${nameNode}${workingDir}/transformers_export_documentmetadata" />
				<mkdir path="${nameNode}${workingDir}/transformers_export_documentmetadata" />
			</prepare>
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
			<arg>-C{document_metadata,
				eu.dnetlib.iis.export.schemas.DocumentMetadata,
				eu/dnetlib/iis/workflows/top/data/empty.json}</arg>
			<!-- notice: directory have to aligned with skipped action output -->
			<arg>-Odocument_metadata=${workingDir}/transformers_export_documentmetadata/output_metadata</arg>
		</java>
		<ok to="decision-export-to-hbase" />
		<error to="fail" />
	</action>

	<decision name="decision-export-to-hbase">
		<switch>
			<case to="export-to-actionmanager">${active_export_to_actionmanager eq "true"}</case>
			<default to="decision-export-to-json" />
		</switch>
	</decision>

	<action name="export-to-actionmanager">
		<sub-workflow>
			<app-path>${wf:appPath()}/mainworkflows_common_export</app-path>
			<propagate-configuration />
			<configuration>
				<property>
					<name>workingDir</name>
					<value>${workingDir}/mainworkflows_common_export/working_dir
					</value>
				</property>
				<!-- input ports -->
				<property>
					<name>input_document_metadata</name>
					<value>${workingDir}/transformers_export_documentmetadata/output_metadata</value>
				</property>
				<property>
					<name>input_document_to_project</name>
					<value>${workingDir}/exported/document_to_project</value>
				</property>
				<property>
					<name>input_document_to_project_concepts</name>
					<value>${workingDir}/exported/document_to_project_concepts</value>
				</property>
				<property>
					<name>input_document_to_dataset</name>
					<value>${workingDir}/exported/document_to_dataset</value>
				</property>
				<property>
					<name>input_document_to_mdstore</name>
					<value>${workingDir}/mainworkflows_common_import/dataset_to_mdstore</value>
				</property>
				<property>
					<name>input_document_to_research_initiatives</name>
					<value>${workingDir}/exported/document_to_research_initiatives</value>
				</property>
				<property>
					<name>input_document_to_pdb</name>
					<value>${workingDir}/exported/document_to_pdb</value>
				</property>
				<property>
					<name>input_document_to_document_classes</name>
					<value>${workingDir}/exported/document_to_document_classes</value>
				</property>
				<property>
					<name>input_citations</name>
					<value>${workingDir}/exported/citation</value>
				</property>
				<property>
					<name>input_document_similarity</name>
					<value>${workingDir}/exported/document_similarity</value>
				</property>
				<!-- entities exporting modes -->
				<property>
					<name>active_export_referenceddataset_datasets</name>
					<value>${active_referenceextraction_dataset}</value>
				</property>
				<property>
					<name>active_export_referencedproject_entities</name>
					<value>false</value>
				</property>
				<property>
					<name>mdstore_service_location</name>
					<value>${import_mdstore_service_location}</value>
				</property>
				<!-- export related -->
				<property>
					<name>action_hbase_table_name</name>
					<value>${export_action_hbase_table_name}</value>
				</property>
				<property>
					<name>action_hbase_table_initialize</name>
					<value>${export_action_hbase_table_initialize}</value>
				</property>
				<!-- action set id properties -->
				<property>
					<name>action_set_id</name>
					<value>${export_action_set_id}</value>
				</property>
				<property>
					<name>action_set_id_document_similarities_standard</name>
					<value>${export_action_set_id_document_similarities_standard}</value>
				</property>
				<property>
					<name>action_set_id_document_classes</name>
					<value>${export_action_set_id_document_classes}</value>
				</property>
				<property>
					<name>action_set_id_document_referencedProjects</name>
					<value>${export_action_set_id_document_referencedProjects}</value>
				</property>
				<property>
					<name>action_set_id_document_referencedDatasets</name>
					<value>${export_action_set_id_document_referencedDatasets}</value>
				</property>
				<property>
					<name>action_set_id_document_referencedDocuments</name>
					<value>${export_action_set_id_document_referencedDocuments}</value>
				</property>
				<property>
					<name>action_set_id_document_research_initiative</name>
					<value>${export_action_set_id_document_research_initiative}</value>
				</property>
				<property>
					<name>action_set_id_document_pdb</name>
					<value>${export_action_set_id_document_pdb}</value>
				</property>
				<property>
					<name>action_set_id_entity_dataset</name>
					<value>${export_action_set_id_entity_dataset}</value>
				</property>

				<property>
					<name>trust_level_threshold</name>
					<value>${export_trust_level_threshold}</value>
				</property>
				<property>
					<name>trust_level_threshold_document_referencedProjects</name>
					<value>${export_trust_level_threshold_document_referencedProjects}</value>
				</property>
				<property>
					<name>trust_level_threshold_document_referencedDatasets</name>
					<value>${export_trust_level_threshold_document_referencedDatasets}</value>
				</property>
				<property>
					<name>trust_level_threshold_document_classes</name>
					<value>${export_trust_level_threshold_document_classes}</value>
				</property>
				<property>
					<name>trust_level_threshold_document_pdb</name>
					<value>${export_trust_level_threshold_document_pdb}</value>
				</property>
				<property>
					<name>action_hbase_remote_zookeeper_quorum</name>
					<value>${hbase_remote_zookeeper_quorum}</value>
				</property>
				<property>
					<name>action_hbase_remote_zookeeper_clientport</name>
					<value>${hbase_remote_zookeeper_clientport}</value>
				</property>
				<property>
					<name>documentssimilarity_threshold</name>
					<value>${export_documentssimilarity_threshold}</value>
				</property>
				<property>
					<name>referenceextraction_pdb_url_root</name>
					<value>${export_referenceextraction_pdb_url_root}</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="decision-export-to-json" />
		<error to="fail" />
	</action>

	<decision name="decision-export-to-json">
		<switch>
			<case to="export-to-json">${active_export_to_json eq "true"}</case>
			<default to="end" />
		</switch>
	</decision>

	<action name="export-to-json">
		<sub-workflow>
			<app-path>${wf:appPath()}/mainworkflows_common_export_to_json</app-path>
			<propagate-configuration />
			<configuration>
				<!-- input ports -->
				<property>
					<name>input_document_metadata</name>
					<value>${workingDir}/transformers_export_documentmetadata/output_metadata</value>
				</property>
				<property>
					<name>input_document_to_project</name>
					<value>${workingDir}/exported/document_to_project</value>
				</property>
				<property>
					<name>input_document_to_project_concepts</name>
					<value>${workingDir}/exported/document_to_project_concepts</value>
				</property>
				<property>
					<name>input_document_to_dataset</name>
					<value>${workingDir}/exported/document_to_dataset</value>
				</property>
				<property>
					<name>input_document_to_mdstore</name>
					<value>${workingDir}/mainworkflows_common_import/dataset_to_mdstore</value>
				</property>
				<property>
					<name>input_document_to_research_initiatives</name>
					<value>${workingDir}/exported/document_to_research_initiatives</value>
				</property>
				<property>
					<name>input_document_to_pdb</name>
					<value>${workingDir}/exported/document_to_pdb</value>
				</property>
				<property>
					<name>input_document_to_document_classes</name>
					<value>${workingDir}/exported/document_to_document_classes</value>
				</property>
				<property>
					<name>input_citations</name>
					<value>${workingDir}/exported/citation</value>
				</property>
				<property>
					<name>input_document_similarity</name>
					<value>${workingDir}/exported/document_similarity</value>
				</property>
				<property>
					<name>output_root</name>
					<value>${workingDir}/exported_as_json</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="end" />
		<error to="fail" />
	</action>

	<kill name="fail">
		<message>Unfortunately, the process failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
	</kill>
	<end name="end" />
</workflow-app>
