<?xml version="1.0"?>
<workflow-app xmlns="uri:oozie:workflow:0.4" name="avro_to_protobuf_converter">

	<parameters>
		<property>
			<name>input</name>
            <description>converter input directory</description>
		</property>
		<property>
			<name>output</name>
			<description>converter output directory</description>
		</property>
        <property>
            <name>param_converter_class</name>
            <description>a class implementing AvroToProtoBufConverter</description>
        </property>
        <property>
            <name>param_avro_input_class</name>
            <description>Avro input class</description>
        </property>
	</parameters>
    
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapred.job.queue.name</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    
    <start to="generate-schema" />

	<action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>${param_avro_input_class}</arg>
	        <capture-output />
	    </java>
	    <ok to="converter" />
	    <error to="fail" />
	</action>

    <action name="converter">
        <map-reduce>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${output}" />
            </prepare>
            <configuration>
                <property>
                    <name>mapreduce.inputformat.class</name>
                    <value>org.apache.avro.mapreduce.AvroKeyInputFormat</value>
                </property>
                <property>
                    <name>mapreduce.outputformat.class</name>
                    <value>org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat</value>
                </property>
                <property>
                    <name>mapred.mapoutput.key.class</name>
                    <value>org.apache.hadoop.io.Text</value>
                </property>
                <property>
                    <name>mapred.mapoutput.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
                <property>
                    <name>mapred.reduce.tasks</name>
                    <value>0</value>
                </property>

                <property>
                    <name>mapred.output.key.class</name>
                    <value>org.apache.hadoop.io.Text</value>
                </property>
                <property>
                    <name>mapred.output.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
                <property>
                    <name>io.serializations</name>
                    <value>org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization,org.apache.avro.hadoop.io.AvroSerialization
                    </value>
                </property>
                <property>
                    <name>rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB
                    </name>
                    <value>org.apache.hadoop.ipc.ProtobufRpcEngine</value>
                </property>

                <!-- ## This is required for new MapReduce API usage -->
                <property>
                    <name>mapred.mapper.new-api</name>
                    <value>true</value>
                </property>
                <property>
                    <name>mapred.reducer.new-api</name>
                    <value>true</value>
                </property>

                <!-- # Job-specific options -->

                <!-- ## Classes of mapper and reducer -->
                <property>
                    <name>mapreduce.map.class</name>
                    <value>eu.dnetlib.iis.common.protobuf.AvroToProtoBufOneToOneMapper</value>
                </property>
                <property>
                    <name>converter_class</name>
                    <value>${param_converter_class}</value>
                </property>

                <!-- ## Schemas -->
                <property>
                    <name>avro.schema.input.key</name>
                    <value>${wf:actionData('generate-schema')[wf:conf('param_avro_input_class')]}</value>
                </property>

                <!-- ## Specification of the input and output data store -->
                <property>
                    <name>mapred.input.dir</name>
                    <value>${input}</value>
                </property>
                <property>
                    <name>mapred.output.dir</name>
                    <value>${output}</value>
                </property>
            </configuration>
        </map-reduce>
        <ok to="end" />
        <error to="fail" />
    </action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    
    <end name="end" />
</workflow-app>
