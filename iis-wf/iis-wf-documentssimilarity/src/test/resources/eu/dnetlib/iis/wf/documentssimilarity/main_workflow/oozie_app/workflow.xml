<?xml version="1.0"?>
<!-- Note that documentation placed in comments in this file uses the
"markdown" syntax (along with division into sections). -->
<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-documentssimilarity_main_workflow">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>

    <start to="data_producer" />

    <action name="data_producer">
        <java>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/producer" />
				<mkdir path="${nameNode}${workingDir}/producer" />
			</prepare>
            <!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
            <arg>-C{document_metadata,
				eu.dnetlib.iis.documentssimilarity.schemas.DocumentMetadata,
				eu/dnetlib/iis/wf/documentssimilarity/main_workflow/data/document_metadata.json}</arg>
            <arg>-Odocument_metadata=${workingDir}/data_producer/document</arg>
                    
        </java>
        <ok to="chain"/>
        <error to="fail"/>
    </action>
    
    <action name="chain">
    	<sub-workflow>
            <app-path>${wf:appPath()}/chain</app-path>
            <propagate-configuration/>
            <configuration>
            	<property>
					<name>input_document</name>
					<value>${workingDir}/data_producer/document</value>
				</property>
				<property>
					<name>output_documents_similarity</name>
					<value>${workingDir}/documents_similarity</value>
				</property>
                <property>
                    <name>workingDir</name>
                    <value>${workingDir}/chain</value>
                </property>
                <property>
                    <name>mapredChildJavaOpts</name>
                    <value>-Xmx1g</value>
                </property>
                <property>
                    <name>similarityTopnDocumentPerDocument</name>
                    <value>3</value>
                </property>
			</configuration>
        </sub-workflow>
    	<ok to="consumer" />
        <error to="fail" />
    </action>
    
    <action name="consumer">
		<java>
			<!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<!-- The business Java code that gets to be executed -->
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.RecordCountTestConsumer</arg>
			<!-- Specification of the input ports -->
			<arg>-C{docsim,eu.dnetlib.iis.documentssimilarity.schemas.DocumentSimilarity,1,750}</arg>
			<arg>-Idocsim=${workingDir}/documents_similarity</arg>
		</java>
		<ok to="end" />
		<error to="fail" />
	</action>
    
    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    <end name="end" />
</workflow-app>
