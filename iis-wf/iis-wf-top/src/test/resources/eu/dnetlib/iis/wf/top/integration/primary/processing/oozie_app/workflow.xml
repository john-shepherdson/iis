<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-mainworkflows_integration_primary_processing">

	<global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapred.job.queue.name</name>
                <value>${queueName}</value>
            </property>
		</configuration>
	</global>

	<start to="generate-schema" />

	<action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>eu.dnetlib.iis.wf.top.schemas.DocumentContentClasspath</arg>
	        <arg>eu.dnetlib.iis.metadataextraction.schemas.DocumentText</arg>
	        <arg>org.apache.avro.Schema.Type.NULL</arg>
	        <capture-output />
	    </java>
	    <ok to="producer" />
	    <error to="fail" />
	</action>
	
	<action name="producer">
        <java>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/producer" />
				<mkdir path="${nameNode}${workingDir}/producer" />
			</prepare>
            <!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
            <arg>-C{document_metadata,
				eu.dnetlib.iis.importer.schemas.DocumentMetadata,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/meta/document_metadata.json}</arg>
			<arg>-C{document_to_project,
				eu.dnetlib.iis.importer.schemas.DocumentToProject,
				eu/dnetlib/iis/wf/top/data/empty.json}</arg>
			<arg>-C{document_content_classpath,
				eu.dnetlib.iis.wf.top.schemas.DocumentContentClasspath,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/meta/document_content_classpath.json}</arg>
			<arg>-C{person,
				eu.dnetlib.iis.importer.schemas.Person,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/meta/person.json}</arg>
			<arg>-C{project,
				eu.dnetlib.iis.importer.schemas.Project,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/meta/project.json}</arg>
			<arg>-C{project_concept,
				eu.dnetlib.iis.importer.schemas.Concept,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/meta/concept.json}</arg>
			<arg>-C{dataset,
				eu.dnetlib.iis.importer.schemas.DataSetReference,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/meta/dataset.json}</arg>
			<arg>-C{extracted_document_metadata,
				eu.dnetlib.iis.metadataextraction.schemas.ExtractedDocumentMetadata,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/metadataextraction/extracted_document_metadata.json}</arg>
			<arg>-C{document_text_wos,
				eu.dnetlib.iis.metadataextraction.schemas.DocumentText,
				eu/dnetlib/iis/wf/top/data/empty.json}</arg>
			<arg>-C{document_text_classpath,
				eu.dnetlib.iis.wf.top.schemas.DocumentContentClasspath,
				eu/dnetlib/iis/wf/top/integration/primary/processing/input/metadataextraction/document_text_classpath.json}</arg>
            <arg>-Odocument_metadata=${workingDir}/producer/document_metadata</arg>
            <arg>-Odocument_to_project=${workingDir}/producer/document_to_project</arg>
            <arg>-Odocument_content_classpath=${workingDir}/producer/document_content_classpath</arg>
            <arg>-Operson=${workingDir}/producer/person</arg>
            <arg>-Oproject=${workingDir}/producer/project</arg>
            <arg>-Oproject_concept=${workingDir}/producer/project_concept</arg>
            <arg>-Odataset=${workingDir}/producer/dataset</arg>
            <arg>-Oextracted_document_metadata=${workingDir}/producer/extracted_document_metadata</arg>
            <arg>-Odocument_text_wos=${workingDir}/producer/document_text_wos</arg>
            <arg>-Odocument_text_classpath=${workingDir}/producer/document_text_classpath</arg>           
        </java>
        <ok to="document_text_producer"/>
        <error to="fail"/>
    </action>

	<action name="document_text_producer">
		<map-reduce>
			<prepare>
				<delete path="${nameNode}${workingDir}/text-producer" />
				<mkdir path="${nameNode}${workingDir}/text-producer" />
			</prepare>
			<configuration>
				<property>
					<name>mapreduce.inputformat.class</name>
					<value>org.apache.avro.mapreduce.AvroKeyInputFormat</value>
				</property>
				<property>
					<name>mapreduce.outputformat.class</name>
					<value>org.apache.avro.mapreduce.AvroKeyOutputFormat</value>
				</property>
				<property>
					<name>mapred.mapoutput.key.class</name>
					<value>org.apache.avro.mapred.AvroKey</value>
				</property>
				<property>
					<name>mapred.mapoutput.value.class</name>
					<value>org.apache.hadoop.io.NullWritable</value>
				</property>
				 <property>
                    <name>mapred.reduce.tasks</name>
                    <value>0</value>
                </property>
				<property>
					<name>mapred.output.key.class</name>
					<value>org.apache.avro.mapred.AvroKey</value>
				</property>
				<property>
					<name>mapred.output.value.class</name>
					<value>org.apache.avro.mapred.AvroValue</value>
				</property>
				<property>
					<name>mapred.output.key.comparator.class</name>
					<value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
				</property>
				<property>
					<name>io.serializations</name>
					<value>org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization,org.apache.avro.hadoop.io.AvroSerialization
					</value>
				</property>
				<property>
					<name>mapred.output.value.groupfn.class</name>
					<value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
				</property>
				<property>
					<name>rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB
					</name>
					<value>org.apache.hadoop.ipc.ProtobufRpcEngine</value>
				</property>
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapreduce.map.class</name>
					<value>eu.dnetlib.iis.wf.top.converters.DocumentClasspathToTextConverter</value>
				</property>
				
				<property>
					<name>avro.schema.input.key</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.wf.top.schemas.DocumentContentClasspath']}</value>
				</property>
		        <property>
                    <name>avro.serialization.key.reader.schema</name>
                    <value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
                </property>
                <property>
                    <name>avro.serialization.key.writer.schema</name>
                    <value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
                </property>
		        <property>
                    <name>avro.serialization.value.reader.schema</name>
                    <value>${wf:actionData('generate-schema')['org.apache.avro.Schema.Type.NULL']}</value>
                </property>
                <property>
                    <name>avro.serialization.value.writer.schema</name>
                    <value>${wf:actionData('generate-schema')['org.apache.avro.Schema.Type.NULL']}</value>
                </property>
		        <property>
                    <name>avro.schema.output.key</name>
                    <value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
                </property>
		        
				<property>
					<name>mapred.input.dir</name>
					<value>${workingDir}/producer/document_text_classpath</value>
				</property>
				<property>
					<name>mapred.output.dir</name>
					<value>${workingDir}/text-producer/document_text</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="mainworkflows_primary_processing" />
		<error to="fail" />
	</action>

	<action name="mainworkflows_primary_processing">
		<sub-workflow>
            <app-path>${wf:appPath()}/mainworkflows_primary_processing</app-path>
            <propagate-configuration/>
            <configuration>
            	<property>
                    <name>active_referenceextraction_project</name>
                    <value>true</value>
                </property>
                <property>
                    <name>active_referenceextraction_dataset</name>
                    <value>true</value>
                </property>
            	<property>
					<name>active_referenceextraction_researchinitiative</name>
					<value>true</value>
				</property>
				<property>
					<name>active_referenceextraction_pdb</name>
					<value>false</value>
				</property>
            	<property>
                    <name>active_documentsclassification</name>
                    <value>true</value>
                </property>
            	<property>
                    <name>active_citationmatching</name>
                    <value>true</value>
                </property>
            	<!-- disabling not tested KDMs -->
                <property>
                    <name>active_documentssimilarity</name>
                    <value>false</value>
                </property>
            	<property>
                    <name>input_document_metadata</name>
                    <value>${workingDir}/producer/document_metadata</value>
                </property>
                <property>
                    <name>input_document_to_project</name>
                    <value>${workingDir}/producer/document_to_project</value>
                </property>
                <property>
                    <name>input_document_text</name>
                    <value>${workingDir}/text-producer/document_text</value>
                </property>
                <property>
                    <name>input_document_text_wos</name>
                    <value>${workingDir}/producer/document_text_wos</value>
                </property>
                <property>
                    <name>input_project</name>
                    <value>${workingDir}/producer/project</value>
                </property>
                <property>
                    <name>input_project_concept</name>
                    <value>${workingDir}/producer/project_concept</value>
                </property>
                <property>
                    <name>input_person</name>
                    <value>${workingDir}/producer/person</value>
                </property>
                <property>
                    <name>input_dataset</name>
                    <value>${workingDir}/producer/dataset</value>
                </property>
                <property>
					<name>input_extracted_document_metadata</name>
					<value>${workingDir}/producer/extracted_document_metadata</value>
				</property>
                <property>
                    <name>output_document_to_project</name>
                    <value>${workingDir}/exported/document_to_project</value>
                </property>
                <property>
                    <name>output_document_to_project_concepts</name>
                    <value>${workingDir}/exported/document_to_project_concepts</value>
                </property>
                <property>
                    <name>output_document_to_dataset</name>
                    <value>${workingDir}/exported/document_to_dataset</value>
                </property>
                <property>
                    <name>output_document_to_research_initiatives</name>
                    <value>${workingDir}/exported/document_to_research_initiatives</value>
                </property>
                <property>
                    <name>output_document_to_pdb</name>
                    <value>${workingDir}/exported/document_to_pdb</value>
                </property>
                <property>
                    <name>output_document_to_document_classes</name>
                    <value>${workingDir}/exported/document_to_document_classes</value>
                </property>
                <property>
                    <name>output_citation</name>
                    <value>${workingDir}/exported/citation</value>
                </property>
                <property>
                    <name>output_document_similarity</name>
                    <value>${workingDir}/exported/document_similarity</value>
                </property>
            </configuration>
        </sub-workflow>
		<ok to="consumer"/>
		<error to="fail" />
	</action>
	
	<action name="consumer">
		<java>
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
			<!-- TODO prepare proper json generated datastores -->
			<arg>-C{document_to_document_classes,
				eu.dnetlib.iis.documentsclassification.schemas.DocumentToDocumentClasses,
				eu/dnetlib/iis/wf/top/integration/primary/processing/output/document_classes.json}</arg>
			<arg>-Idocument_to_document_classes=${workingDir}/exported/document_to_document_classes</arg>
			<arg>-C{document_to_dataset,
				eu.dnetlib.iis.referenceextraction.dataset.schemas.DocumentToDataSet,
				eu/dnetlib/iis/wf/top/integration/primary/processing/output/document_to_dataset.json}</arg>
			<arg>-Idocument_to_dataset=${workingDir}/exported/document_to_dataset</arg>
			<arg>-C{document_to_project,
				eu.dnetlib.iis.referenceextraction.project.schemas.DocumentToProject,
				eu/dnetlib/iis/wf/top/integration/primary/processing/output/document_to_project.json}</arg>
			<arg>-Idocument_to_project=${workingDir}/exported/document_to_project</arg>
			<arg>-C{document_to_project_concepts,
				eu.dnetlib.iis.export.schemas.DocumentToConceptIds,
				eu/dnetlib/iis/wf/top/integration/primary/processing/output/document_to_project_concepts.json}</arg>
			<arg>-Idocument_to_project_concepts=${workingDir}/exported/document_to_project_concepts</arg>
			<arg>-C{document_to_research_initiatives,
				eu.dnetlib.iis.export.schemas.DocumentToConceptIds,
				eu/dnetlib/iis/wf/top/integration/primary/processing/output/document_to_research_initiatives.json}</arg>
			<arg>-Idocument_to_research_initiatives=${workingDir}/exported/document_to_research_initiatives</arg>
			<arg>-C{citation,
				eu.dnetlib.iis.export.schemas.Citations,
				eu/dnetlib/iis/wf/top/integration/primary/processing/output/citations.json}</arg>
			<arg>-Icitation=${workingDir}/exported/citation</arg>
			<arg>-C{document_similarity,
				eu.dnetlib.iis.documentssimilarity.schemas.DocumentSimilarity,
				eu/dnetlib/iis/wf/top/data/empty.json}</arg>
			<arg>-Idocument_similarity=${workingDir}/exported/document_similarity</arg>
		</java>
		<ok to="end" />
		<error to="fail" />
	</action>
	
	<kill name="fail">
		<message>Unfortunately, the process failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
	</kill>
	<end name="end" />
</workflow-app>
