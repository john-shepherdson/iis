<workflow-app xmlns="uri:oozie:workflow:0.4" name="importer_content_url_core">

	<parameters>
		<!-- input -->
        <property>
            <name>objectstore_facade_factory_classname</name>
            <value>eu.dnetlib.iis.wf.importer.facade.WebServiceObjectStoreFacadeFactory</value>
            <description>ServiceFacadeFactory implementation class name producing eu.dnetlib.iis.wf.importer.facade.ObjectStoreFacade</description>
        </property>
		<property>
			<name>objectstore_service_location</name>
			<description>object store service location to retrieve PDF/text contents from</description>
		</property>
		<property>
			<name>approved_objectstores_csv</name>
			<value>$UNDEFINED$</value>
			<description>CSV of approved object stores</description>
		</property>
		<property>
			<name>blacklisted_objectstores_csv</name>
			<value>$UNDEFINED$</value>
			<description>CSV of blacklisted object stores</description>
		</property>
        <property>
            <name>dnet_service_client_read_timeout</name>
            <value>60000</value>
            <description>DNet service client reading timeout (expressed in milliseconds)</description>
        </property>
        <property>
            <name>dnet_service_client_connection_timeout</name>
            <value>60000</value>
            <description>DNet service client connection timeout (expressed in milliseconds)</description>
        </property>
        <property>
            <name>resultset_client_read_timeout</name>
            <value>60000</value>
            <description>result set client reading timeout (expressed in milliseconds)</description>
        </property>
        <property>
            <name>resultset_client_connection_timeout</name>
            <value>60000</value>
            <description>result set client connection timeout (expressed in milliseconds)</description>
        </property>
        <property>
            <name>input_objectstore_resultset_pagesize</name>
            <value>100</value>
            <description>ResultSet single page size</description>
        </property>
		<property>
			<name>output</name>
			<description>output root directory</description>
		</property>
	</parameters>

	<global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${importerQueueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
		</configuration>
	</global>

	<start to="generate-schema" />

	<action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl</arg>
	        <arg>org.apache.avro.Schema.Type.NULL</arg>
	        <arg>org.apache.avro.Schema.Type.STRING</arg>
	        <capture-output />
	    </java>
	    <ok to="objectstoreid-importer" />
	    <error to="fail" />
	</action>
	
    <action name="objectstoreid-importer">
        <java>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${workingDir}/identifier" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.wf.importer.content.ObjectStoreIdentifierDatastoreBuilder</arg>
            <arg>-Pimport.content.approved.objectstores.csv=${approved_objectstores_csv}</arg>
            <arg>-Pimport.content.blacklisted.objectstores.csv=${blacklisted_objectstores_csv}</arg>
            <arg>-Oidentifier=${workingDir}/identifier</arg>
        </java>
        <ok to="content-url-retriever" />
        <error to="fail" />
    </action>
    
    <action name="content-url-retriever">
        <map-reduce>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${output}" />
            </prepare>
            <configuration>
                <!-- disabling speculative run to be less invasive to ObjectStore -->
                <property>
                    <name>mapreduce.map.speculative</name>
                    <value>false</value>
                </property>
                <property>
                    <name>mapreduce.task.timeout</name>
                    <value>14400000</value>
                </property>
                <property>
                    <name>mapreduce.job.inputformat.class</name>
                    <value>org.apache.avro.mapreduce.AvroKeyInputFormat</value>
                </property>
                <!-- The output format seems to be required, JSON is written when missing -->
                <property>
                    <name>mapreduce.job.outputformat.class</name>
                    <value>org.apache.avro.mapreduce.AvroKeyOutputFormat</value>
                </property>
                <property>
                    <name>mapreduce.map.output.key.class</name>
                    <value>org.apache.avro.mapred.AvroKey</value>
                </property>
                <property>
                    <name>mapreduce.map.output.value.class</name>
                    <value>org.apache.avro.mapred.AvroValue</value>
                </property>
                <property>
                    <name>mapreduce.job.output.key.class</name>
                    <value>org.apache.avro.mapred.AvroKey</value>
                </property>
                <property>
                    <name>mapreduce.job.output.value.class</name>
                    <value>org.apache.avro.mapred.AvroValue</value>
                </property>
                <property>
                    <name>mapreduce.job.output.key.comparator.class</name>
                    <value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
                </property>
                <property>
                    <name>io.serializations</name>
                    <value>org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization,org.apache.avro.hadoop.io.AvroSerialization
                    </value>
                </property>
                <property>
                    <name>mapreduce.job.output.group.comparator.class</name>
                    <value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
                </property>
                
                <property>
                    <name>rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB
                    </name>
                    <value>org.apache.hadoop.ipc.ProtobufRpcEngine</value>
                </property>
            
                <!-- This is required for new api usage -->
                <property>
                    <name>mapred.mapper.new-api</name>
                    <value>true</value>
                </property>
                <property>
                    <name>mapred.reducer.new-api</name>
                    <value>true</value>
                </property>
            
                <!-- Standard stuff for our framework -->

                <property>
                    <name>avro.serialization.key.reader.schema</name>
                    <value>${wf:actionData('generate-schema')['eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl']}</value>
                </property>
                <property>
                    <name>avro.serialization.key.writer.schema</name>
                    <value>${wf:actionData('generate-schema')['eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl']}</value>
                </property>
                
                <!-- As a convention, we're setting "null" values 
                since mapper does not produce any standard data in this example 
                (probably any other valid Avro schema would be OK as well).-->
                <property>
                    <name>avro.serialization.value.reader.schema</name>
                    <value>${wf:actionData('generate-schema')['org.apache.avro.Schema.Type.NULL']}</value>
                </property>
                <property>
                    <name>avro.serialization.value.writer.schema</name>
                    <value>${wf:actionData('generate-schema')['org.apache.avro.Schema.Type.NULL']}</value>
                </property>
                
                <property>
                    <name>avro.schema.output.key</name>
                    <value>${wf:actionData('generate-schema')['eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl']}</value>
                </property>
                
                <property>
                    <name>mapreduce.input.fileinputformat.inputdir</name>
                    <value>${workingDir}/identifier</value>
                </property>
                <property>
                    <name>mapreduce.output.fileoutputformat.outputdir</name>
                    <value>${output}</value>
                </property>
                <property>
                    <name>import.content.object.store.location</name>
                    <value>${objectstore_service_location}</value>
                </property>
                <property>
                    <name>import.facade.factory.classname</name>
                    <value>${objectstore_facade_factory_classname}</value>
                </property>
                <property>
                    <name>import.resultset.pagesize</name>
                    <value>${input_objectstore_resultset_pagesize}</value>
                </property>
                <property>
                    <name>import.resultset.client.connection.timeout</name>
                   <value>${resultset_client_connection_timeout}</value>
                </property>
                <property>
                    <name>import.resultset.client.read.timeout</name>
                   <value>${resultset_client_read_timeout}</value>
                </property>
                <property>
                    <name>dnet.service.client.connection.timeout</name>
                    <value>${dnet_service_client_connection_timeout}</value>
                </property>
                <property>
                    <name>dnet.service.client.read.timeout</name>
                    <value>${dnet_service_client_read_timeout}</value>
                </property>
                <property>
                    <name>mapreduce.job.map.class</name>
                    <value>eu.dnetlib.iis.wf.importer.content.ObjectStoreDocumentContentUrlImporterMapper</value>
                </property>
                <property>
                    <name>mapreduce.job.reduces</name>
                    <value>0</value>
                </property>
            </configuration>
        </map-reduce>
          <ok to="end"/>
        <error to="fail"/>
    </action>
	
	<kill name="fail">
		<message>Unfortunately, the process failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
	</kill>
	<end name="end" />
</workflow-app>
