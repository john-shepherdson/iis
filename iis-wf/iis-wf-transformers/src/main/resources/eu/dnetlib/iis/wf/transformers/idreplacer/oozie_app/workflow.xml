<workflow-app xmlns="uri:oozie:workflow:0.4" name="idreplacer">
	
	<parameters>
        <property>
			<name>id_field_to_replace1</name>
			<description>name of 1st id field to replace</description>
		</property>
        <property>
            <name>id_field_to_replace2</name>
            <value>$UNDEFINED$</value>
            <description>name of 2nd id field to replace, optional property</description>
        </property>
		<property>
			<name>input</name>
			<description>input main port</description>
		</property>
		<property>
			<name>schema</name>
			<description>input and output schema</description>
		</property>
        <property>
			<name>input_id_mapping</name>
			<description>input id mapping port</description>
		</property>
        <property>
			<name>output</name>
			<description>output port</description>
		</property>
	</parameters>

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapred.job.queue.name</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>

    <start to="generate-schema"/>
    
    <action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>${schema}</arg>
	        <arg>eu.dnetlib.iis.common.schemas.IdentifierMapping</arg>
	        <capture-output />
	    </java>
	    <ok to="how_many_fields_to_replace" />
	    <error to="fail" />
	</action>

    <decision name="how_many_fields_to_replace">
        <switch>
            <case to="replacer_1_field">${id_field_to_replace2 eq "$UNDEFINED$"}</case>
            <default to="replacer_2_fields"/>
        </switch>
    </decision>

    <action name="replacer_1_field">
        <pig>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${output}" />
			</prepare>
            <!-- Path to PIG script the workflow executes. -->
            <script>lib/scripts/replacer_1_field.pig</script>

            <param>input=${input}</param>
            <param>schema_input_main=${wf:actionData('generate-schema')[wf:conf('schema')]}</param>

            <param>input_id_mapping=${input_id_mapping}</param>
            <param>schema_input_id_mapping=${wf:actionData('generate-schema')['eu.dnetlib.iis.common.schemas.IdentifierMapping']}</param>

            <param>output=${output}</param>
            <param>schema_output=${wf:actionData('generate-schema')[wf:conf('schema')]}</param>

            <param>id_field_to_replace1=${id_field_to_replace1}</param>
        </pig>
        <ok to="end"/>
        <error to="fail"/>
    </action>

    <action name="replacer_2_fields">
        <pig>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${output}" />
            </prepare>
            <!-- Path to PIG script the workflow executes. -->
            <script>lib/scripts/replacer_2_fields.pig</script>

            <param>input=${input}</param>
            <param>schema_input_main=${wf:actionData('generate-schema')[wf:conf('schema')]}</param>

            <param>input_id_mapping=${input_id_mapping}</param>
            <param>schema_input_id_mapping=${wf:actionData('generate-schema')['eu.dnetlib.iis.common.schemas.IdentifierMapping']}</param>

            <param>output=${output}</param>
            <param>schema_output=${wf:actionData('generate-schema')[wf:conf('schema')]}</param>

            <param>id_field_to_replace1=${id_field_to_replace1}</param>
            <param>id_field_to_replace2=${id_field_to_replace2}</param>
        </pig>
        <ok to="end"/>
        <error to="fail"/>
    </action>

    <kill name="fail">
		<message>Unfortunately, the workflow failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>

    <end name="end"/>
</workflow-app>
