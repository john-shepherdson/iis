<workflow-app xmlns="uri:oozie:workflow:0.4" name="transformers_importer_plaintext_skip_extracted">
	
	<parameters>
		<property>
			<name>input_document_content</name>
			<description>document content input</description>
		</property>
		<property>
			<name>input_document_text</name>
			<description>document text input</description>
		</property>
		<property>
			<name>output_document_content</name>
			<description>document content output: all contents which were not processed so far, based in input_document_meta inspection</description>
		</property>
		<property>
			<name>output_document_text</name>
			<description>document text ouput: all plaintext records which were already processed, found in input_document_text</description>
		</property>
	</parameters>
    
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    
    <start to="generate-schema"/>
    
    <action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl</arg>
	        <arg>eu.dnetlib.iis.metadataextraction.schemas.DocumentText</arg>
	        <capture-output />
	    </java>
	    <ok to="transformer" />
	    <error to="fail" />
	</action>
	
    <action name="transformer">
        <pig>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${output_document_content}" />
				<delete path="${nameNode}${output_document_text}" />
			</prepare>
            <configuration>
                <property>
                    <name>mapreduce.map.java.opts</name>
                    <value>-Xmx4g</value>
                </property>
                <property>
                    <name>mapreduce.reduce.java.opts</name>
                    <value>-Xmx4g</value>
                </property>
            </configuration>
            <!-- Path to PIG script the workflow executes. -->
            <script>lib/scripts/transformer.pig</script>
            
            <param>schema_document_content=${wf:actionData('generate-schema')['eu.dnetlib.iis.importer.auxiliary.schemas.DocumentContentUrl']}</param>
            <param>schema_document_text=${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</param>
            
            <param>input_document_content=${input_document_content}</param>
            <param>input_document_text=${input_document_text}</param>
            
            <param>output_document_content=${output_document_content}</param>
            <param>output_document_text=${output_document_text}</param>
            
        </pig>
        <ok to="end"/>
        <error to="fail"/>
    </action>
    <kill name="fail">
		<message>Unfortunately, the workflow failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
