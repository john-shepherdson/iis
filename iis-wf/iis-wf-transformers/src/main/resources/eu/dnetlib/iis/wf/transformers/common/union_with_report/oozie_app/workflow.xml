<workflow-app xmlns="uri:oozie:workflow:0.4" name="transformers_common_union_with_report">
    
    <parameters>
        <property>
            <name>input_a</name>
        </property>
        <property>
            <name>input_b</name>
        </property>
        <property>
            <name>output</name>
        </property>
        <property>
            <name>schema</name>
        </property>
        <property>
            <name>combine_splits</name>
            <!-- zero will use the Pig default -->
            <value>0</value>
            <description>Value for pig.maxCombinedSplitSize Pig property</description>
        </property>
        <property>
            <name>output_report</name>
            <description>directory for storing report</description>
        </property>
        <property>
            <name>union_count_report_key</name>
            <description>key of report param (eu.dnetlib.iis.common.schemas.ReportEntry) under witch count of unioned datastore will be saved</description>
        </property>
    </parameters>
    
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    
    <start to="generate-schema"/>
    
    <action name="generate-schema">
        <java>
            <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
            <arg>${schema}</arg>
            <capture-output />
        </java>
        <ok to="transformer" />
        <error to="fail" />
    </action>
    
    <action name="transformer">
        <pig>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${output}" />
            </prepare>
            <configuration>
                <property>
                    <name>pig.maxCombinedSplitSize</name>
                    <value>${combine_splits}</value>
                </property>
                <property>
                    <name>oozie.action.external.stats.write</name>
                    <value>true</value>
                </property>
            </configuration>
            <!-- Path to PIG script the workflow executes. -->
            <script>lib/scripts/union.pig</script>
            
            <param>input_a=${input_a}</param>
            <param>input_b=${input_b}</param>
            <param>output=${output}</param>
            <param>schema=${wf:actionData('generate-schema')[wf:conf('schema')]}</param>
        </pig>
        <ok to="report"/>
        <error to="fail"/>
    </action>
    
    <action name="report">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.report.PigCountersReportGenerator</arg>
            <arg>-PpigCounters=${hadoop:counters('transformer')}</arg>
            <arg>-Preport.${union_count_report_key}={output_c.RECORD_WRITTEN}</arg>
            <arg>-Oreport=${output_report}</arg>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>
    
    <kill name="fail">
        <message>Unfortunately, the workflow failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
