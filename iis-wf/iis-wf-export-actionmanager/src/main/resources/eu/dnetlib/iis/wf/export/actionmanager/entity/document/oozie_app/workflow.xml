<workflow-app xmlns="uri:oozie:workflow:0.4" name="export_actionmanager_entity_document">
    
    <parameters>
        <property>
            <name>input_document_to_project</name>
            <description>Input containing eu.dnetlib.iis.referenceextraction.project.schemas.DocumentToProject avro records 
                listing all documents with project references. To be used for filtering subset od all document texts.</description>
        </property>
        <property>
            <name>input_document_text</name>
            <description>Input containing eu.dnetlib.iis.metadataextraction.schemas.DocumentText avro records 
                listing all document plain texts. To be used as a source for filtering of matched publications.</description>
        </property>
        <property>
            <name>action_set_id_entity_document</name>
            <description>Identifier of action set holding document entities.
            It also defines ${output_root} subdirectory name where all document related actions are exported.</description>
        </property>
        <property>
            <name>trust_level_threshold_document_referencedProjects</name>
            <value>$UNDEFINED$</value>
            <description>document_referencedProjects trust level threshold</description>
        </property>
        <property>
            <name>output_root</name>
            <description>root directory for storing ${action_set_id_entity_document} subdirectory with exported documents</description>
        </property>
        <property>
            <name>output_report_root_path</name>
            <description>base directory for storing reports</description>
        </property>
        <property>
            <name>output_report_relative_path</name>
            <value>export_document_entities</value>
            <description>directory for storing report (relative to output_report_root_path)</description>
        </property>
        <property>
            <name>sparkDriverMemory</name>
            <description>memory for driver process</description>
        </property>
        <property>
            <name>sparkExecutorMemory</name>
            <description>memory for individual executor</description>
        </property>
        <property>
            <name>sparkExecutorCores</name>
            <description>number of cores used by single executor</description>
        </property>
        <property>
            <name>oozieActionShareLibForSpark2</name>
            <description>oozie action sharelib for spark 2.*</description>
        </property>
        <property>
            <name>spark2ExtraListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorAppListener</value>
            <description>spark 2.* extra listeners classname</description>
        </property>
        <property>
            <name>spark2SqlQueryExecutionListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorQueryListener</value>
            <description>spark 2.* sql query execution listeners classname</description>
        </property>
        <property>
            <name>spark2YarnHistoryServerAddress</name>
            <description>spark 2.* yarn history server address</description>
        </property>
        <property>
            <name>spark2EventLogDir</name>
            <description>spark 2.* event log dir location</description>
        </property>
    </parameters>
    
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
            <property>
                <name>oozie.action.sharelib.for.spark</name>
                <value>${oozieActionShareLibForSpark2}</value>
            </property>
        </configuration>
    </global>

    <start to="exporter-document-entities" />

    <action name="exporter-document-entities">
        <spark xmlns="uri:oozie:spark-action:0.2">

            <prepare>
                <delete path="${nameNode}${output_root}/${action_set_id_entity_document}" />
                <delete path="${nameNode}${output_report_root_path}/${output_report_relative_path}" />
            </prepare>

            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>document entities spark exporter</name>
            <class>eu.dnetlib.iis.wf.export.actionmanager.entity.EntityExporterJob</class>
            <jar>${oozieTopWfApplicationPath}/lib/iis-wf-export-actionmanager-${projectVersion}.jar</jar>
            
            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --executor-cores=${sparkExecutorCores}
                --driver-memory=${sparkDriverMemory}
                --conf spark.extraListeners=${spark2ExtraListeners}
                --conf spark.sql.queryExecutionListeners=${spark2SqlQueryExecutionListeners}
                --conf spark.yarn.historyServer.address=${spark2YarnHistoryServerAddress}
                --conf spark.eventLog.dir=${nameNode}${spark2EventLogDir}
            </spark-opts>

            <arg>-entityFilterClassName=eu.dnetlib.iis.wf.export.actionmanager.entity.DocumentFilter</arg>
            <arg>-entityXSLTLocation=eu/dnetlib/actionmanager/xslt/dmf2insertActions.xslt</arg>
            <arg>-counterName=export.entity.document.total</arg>

            <arg>-actionSetId=${action_set_id_entity_document}</arg>
            <arg>-trustLevelThreshold=${trust_level_threshold_document_referencedProjects}</arg>

            <arg>-inputRelationAvroPath=${input_document_to_project}</arg>
            <arg>-inputEntityAvroPath=${input_document_text}</arg>
            
            <arg>-outputAvroPath=${output_root}/${action_set_id_entity_document}</arg>
            <arg>-outputReportPath=${output_report_root_path}/${output_report_relative_path}</arg>

        </spark>
        <ok to="end" />
        <error to="fail" />
    </action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    
    <end name="end" />
    
</workflow-app>