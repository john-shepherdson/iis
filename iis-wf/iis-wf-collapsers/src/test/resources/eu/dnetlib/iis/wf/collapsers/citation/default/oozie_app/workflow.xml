<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-citation_collapser_default">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>


    <start to="producer" />
    <action name="producer">
        <java>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${workingDir}/producer" />
                <mkdir path="${nameNode}${workingDir}/producer" />
            </prepare>
            <!-- This is simple wrapper for the Java code -->
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <!-- The business Java code that gets to be executed -->
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
            <!-- Specification of the output ports -->
            <arg>-C{input,
                eu.dnetlib.iis.common.citations.schemas.Citation,
                eu/dnetlib/iis/wf/collapsers/citation/default/data/input.json}
            </arg>
            <!-- All input and output ports have to be bound to paths in HDFS -->
            <arg>-Oinput=${workingDir}/producer/input</arg>
        </java>
        <ok to="citation_collapser" />
        <error to="fail" />
    </action>

    <action name="citation_collapser">
        <sub-workflow>
            <app-path>${wf:appPath()}/citation_collapser</app-path>
            <configuration>
                <property>
                    <name>jobTracker</name>
                    <value>${jobTracker}</value>
                </property>
                <property>
                    <name>nameNode</name>
                    <value>${nameNode}</value>
                </property>
                <property>
                    <name>queueName</name>
                    <value>${queueName}</value>
                </property>
                <property>
                    <name>oozieLauncherQueueName</name>
                    <value>${oozieLauncherQueueName}</value>
                </property>
                <!-- Working directory of the subworkflow -->
                <property>
                    <name>workingDir</name>
                    <value>${workingDir}/citation_collapser/working_dir</value>
                </property>
                <!-- Input ports. -->
                <property>
                    <name>input</name>
                    <value>${workingDir}/producer/input</value>
                </property>
                <!-- Output port bound to given path -->
                <property>
                    <name>output</name>
                    <value>${workingDir}/citation_collapser/output</value>
                </property>
                <property>
                    <name>output_report_root_path</name>
                    <value>${workingDir}/report</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="consumer" />
        <error to="fail" />
    </action>

    <action name="consumer">
        <java>
            <!-- This is simple wrapper for the Java code -->
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <!-- The business Java code that gets to be executed -->
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <!-- Specification of the input ports -->
            <arg>-C{output,
                eu.dnetlib.iis.common.citations.schemas.Citation,
                eu/dnetlib/iis/wf/collapsers/citation/default/data/output.json}
            </arg>
            <arg>-C{report,
                eu.dnetlib.iis.common.schemas.ReportEntry,
                eu/dnetlib/iis/wf/collapsers/citation/default/data/report.json}
            </arg>
            <!-- All input and output ports have to be bound to paths in HDFS -->
            <arg>-Ioutput=${workingDir}/citation_collapser/output</arg>
            <arg>-Ireport=${workingDir}/report/citation</arg>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>
    <kill name="fail">
        <message>Unfortunately, the workflow failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    <end name="end" />
</workflow-app>
