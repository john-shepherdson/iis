<workflow-app xmlns="uri:oozie:workflow:0.4" name="ingest_pmc_metadata">

	<parameters>
		<property>
			<name>input</name>
			<description>input document text with NLMs</description>
		</property>
		<property>
			<name>output_root</name>
			<description>output root directory</description>
		</property>
		<property>
			<name>output_name_meta</name>
			<value>meta</value>
			<description>metadata output subdirectory name</description>
		</property>
		<property>
			<name>output_name_fault</name>
			<value>fault</value>
			<description>Fault output subdirectory name.
				Fault#supplementaryData conveys data identified with the following keys:
				'text' - pmc xml record causing fault
			</description>
		</property>
		<property>
			<name>ingest_metadata</name>
			<value>true</value>
			<description>Flag indicating metadata fields should be extracted.
				Only plaintext will be provided when flag set to false.
			</description>
		</property>
	</parameters>

	<start to="generate-schema" />

	<action name="generate-schema">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
			<arg>eu.dnetlib.iis.metadataextraction.schemas.DocumentText</arg>
			<arg>eu.dnetlib.iis.ingest.pmc.metadata.schemas.ExtractedDocumentMetadata</arg>
			<arg>eu.dnetlib.iis.audit.schemas.Fault</arg>
			<capture-output />
		</java>
		<ok to="ingest" />
		<error to="fail" />
	</action>

	<action name="ingest">
		<map-reduce>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${output_root}" />
			</prepare>
			<configuration>
				<property>
					<name>mapreduce.inputformat.class</name>
					<value>org.apache.avro.mapreduce.AvroKeyInputFormat</value>
				</property>
				<property>
					<name>mapred.mapoutput.key.class</name>
					<value>org.apache.avro.mapred.AvroKey</value>
				</property>
				<property>
					<name>mapred.mapoutput.value.class</name>
					<value>org.apache.avro.mapred.AvroValue</value>
				</property>
				<property>
					<name>mapred.output.key.class</name>
					<value>org.apache.avro.mapred.AvroKey</value>
				</property>
				<property>
					<name>mapred.output.value.class</name>
					<value>org.apache.avro.mapred.AvroValue</value>
				</property>
				<property>
					<name>mapred.output.key.comparator.class</name>
					<value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
				</property>
				<property>
					<name>io.serializations</name>
					<value>org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization,org.apache.avro.hadoop.io.AvroSerialization</value>
				</property>
				<property>
					<name>mapred.output.value.groupfn.class</name>
					<value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
				</property>

				<property>
					<name>rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB</name>
					<value>org.apache.hadoop.ipc.ProtobufRpcEngine</value>
				</property>

				<!-- This is required for new api usage -->
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>

				<!-- Standard stuff for our framework -->
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queueName}</value>
				</property>
				<property>
					<name>avro.schema.input.key</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
				</property>
				<property>
					<name>avro.mapreduce.multipleoutputs</name>
					<value>${output_name_meta} ${output_name_fault}</value>
				</property>
				<!-- ## Output classes for all output ports -->
				<property>
					<name>avro.mapreduce.multipleoutputs.namedOutput.${output_name_meta}.format</name>
					<value>org.apache.avro.mapreduce.AvroKeyOutputFormat</value>
				</property>
				<property>
					<name>avro.mapreduce.multipleoutputs.namedOutput.${output_name_fault}.format</name>
					<value>org.apache.avro.mapreduce.AvroKeyOutputFormat</value>
				</property>
				<!-- ### Schema of multiple output ports. -->
				<property>
					<name>avro.mapreduce.multipleoutputs.namedOutput.${output_name_meta}.keyschema</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.ingest.pmc.metadata.schemas.ExtractedDocumentMetadata']}</value>
				</property>
				<property>
					<name>avro.mapreduce.multipleoutputs.namedOutput.${output_name_fault}.keyschema</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.audit.schemas.Fault']}</value>
				</property>
				<property>
					<name>mapred.input.dir</name>
					<value>${input}</value>
				</property>
				<property>
					<name>mapred.output.dir</name>
					<value>${output_root}</value>
				</property>
				<property>
					<name>output.meta</name>
					<value>${output_name_meta}</value>
				</property>
				<property>
					<name>output.fault</name>
					<value>${output_name_fault}</value>
				</property>
				<property>
					<name>mapreduce.map.class</name>
					<value>eu.dnetlib.iis.wf.ingest.pmc.metadata.MetadataImporter</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>0</value>
				</property>
				<property>
					<name>ingest.metadata</name>
					<value>${ingest_metadata}</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="end" />
		<error to="fail" />
	</action>

	<kill name="fail">
		<message>Unfortunately, the process failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]
		</message>
	</kill>
	<end name="end" />

</workflow-app>