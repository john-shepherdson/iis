<?xml version="1.0"?>
<!-- Note that documentation placed in comments in this file uses the
"markdown" syntax (along with its way of dividing text into sections). -->
<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-referenceextraction_community_main_sampletest">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    
	<start to="producer" />

	<action name="producer">
		<java>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/producer" />
				<mkdir path="${nameNode}${workingDir}/producer" />
			</prepare>
			<!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<!-- The business Java code that gets to be executed -->
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
			<!-- Specification of the output ports -->
			<arg>-C{document_text, 
				eu.dnetlib.iis.metadataextraction.schemas.DocumentText,
				eu/dnetlib/iis/wf/referenceextraction/community/data/document_text.json}</arg>
			<arg>-C{concept, 
				eu.dnetlib.iis.importer.schemas.Concept,
				eu/dnetlib/iis/wf/referenceextraction/community/data/concept.json}</arg>
			<!-- All input and output ports have to be bound to paths in HDFS -->
			<arg>-Odocument_text=${workingDir}/producer/document_text</arg>
			<arg>-Oconcept=${workingDir}/producer/concept</arg>
		</java>
		<ok to="referenceextraction_community" />
		<error to="fail" />
	</action>

    <action name="referenceextraction_community">
        <sub-workflow>
            <app-path>${wf:appPath()}/referenceextraction_community</app-path>
            <propagate-configuration />
            <configuration>
                <!-- Working directory of the subworkflow -->
                <property>
                    <name>workingDir</name>
                    <value>${workingDir}/referenceextraction_community/working_dir</value>
                </property>
                <property>
                    <name>input_document_text</name>
                    <value>${workingDir}/producer/document_text</value>
                </property>
                <property>
                    <name>input_concept</name>
                    <value>${workingDir}/producer/concept</value>
                </property>
                <property>
                    <name>output_document_to_concept</name>
                    <value>${workingDir}/referenceextraction_community/output</value>
                </property>
                <property>
                    <name>output_report_root_path</name>
                    <value>${workingDir}/referenceextraction_community/report</value>
                </property>
                <!-- sparkDriverMemory, sparkExecutorMemory, sparkExecutorCores are provided by environment (since git#889) -->
            </configuration>
        </sub-workflow>
        <ok to="consumer"/>
        <error to="fail"/>
    </action>

	<action name="consumer">
		<java>
			<!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<!-- The business Java code that gets to be executed -->
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
			<!-- All input and output ports have to be bound to paths in HDFS -->
			<arg>-C{document_to_community,
				eu.dnetlib.iis.referenceextraction.community.schemas.DocumentToConceptId,
				eu/dnetlib/iis/wf/referenceextraction/community/data/document_to_community.json}</arg>
            <arg>-C{report,
                eu.dnetlib.iis.common.schemas.ReportEntry,
                eu/dnetlib/iis/wf/referenceextraction/community/data/report.json}</arg>
			<!-- All input and output ports have to be bound to paths in HDFS -->
			<arg>-Idocument_to_community=${workingDir}/referenceextraction_community/output</arg>
            <arg>-Ireport=${workingDir}/referenceextraction_community/report/document_to_community_by_root_conceptid</arg>
		</java>
		<ok to="end" />
		<error to="fail" />
	</action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
        			[${wf:errorMessage(wf:lastErrorNode())}]
        		</message>
    </kill>

    <end name="end"/>
</workflow-app>
