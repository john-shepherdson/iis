<workflow-app xmlns="uri:oozie:workflow:0.4" name="transformers_referenceextraction_project_toconcept">
	
	<parameters>
		<property>
			<name>input_document_to_project</name>
		</property>
		<property>
			<name>input_project</name>
		</property>
		<property>
			<name>input_concept</name>
		</property>
		<property>
			<name>grant_id_param_name</name>
			<value>CD_PROJECT_NUMBER</value>
		</property>
		<property>
			<name>output</name>
		</property>
     </parameters>
    
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    
    <start to="generate-schema"/>
    
    <action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>eu.dnetlib.iis.referenceextraction.project.schemas.DocumentToProject</arg>
	        <arg>eu.dnetlib.iis.importer.schemas.Project</arg>
	        <arg>eu.dnetlib.iis.importer.schemas.Concept</arg>
	        <arg>eu.dnetlib.iis.referenceextraction.researchinitiative.schemas.DocumentToConceptId</arg>
	        <capture-output />
	    </java>
	    <ok to="transformer" />
	    <error to="fail" />
	</action>
	
    <action name="transformer">
        <pig>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${output}" />
			</prepare>
			
            <!-- Path to PIG script the workflow executes. -->
            <script>lib/scripts/transformer.pig</script>
            
            <param>input_document_to_project=${input_document_to_project}</param>
            <param>schema_input_document_to_project=${wf:actionData('generate-schema')['eu.dnetlib.iis.referenceextraction.project.schemas.DocumentToProject']}</param>
            
            <param>input_project=${input_project}</param>
            <param>schema_input_project=${wf:actionData('generate-schema')['eu.dnetlib.iis.importer.schemas.Project']}</param>

            <param>input_concept=${input_concept}</param>
            <param>schema_input_concept=${wf:actionData('generate-schema')['eu.dnetlib.iis.importer.schemas.Concept']}</param>
            
            <param>grant_id_param_name=${grant_id_param_name}</param>
            
            <param>output=${output}</param>
            <param>schema_output=${wf:actionData('generate-schema')['eu.dnetlib.iis.referenceextraction.researchinitiative.schemas.DocumentToConceptId']}</param>
        </pig>
        
        <ok to="end"/>
        <error to="fail"/>
    </action>
    
       
    <kill name="fail">
		<message>Unfortunately, the workflow failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
