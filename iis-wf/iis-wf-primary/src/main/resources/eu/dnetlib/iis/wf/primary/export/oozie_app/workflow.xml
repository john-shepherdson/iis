<workflow-app xmlns="uri:oozie:workflow:0.4" name="primary_export">

    <parameters>
        <!-- input ports -->
        <property>
            <name>input_document_metadata</name>
            <value>$UNDEFINED$</value>
            <description>Input containing eu.dnetlib.iis.transformers.metadatamerger.schemas.ExtractedDocumentMetadataMergedWithOriginal avro records.
                Required for generating alternative software titles based on software -> publication relations.</description>
        </property>
        <property>
            <name>input_document_to_project</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_project_concepts</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_dataset</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_research_initiatives</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_community</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_pdb</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_software_url</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_document_classes</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_citations</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_similarity</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_matched_doc_organizations</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_document_to_patent</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>input_patent</name>
            <value>$UNDEFINED$</value>
        </property>
        <property>
            <name>output_remote_location</name>
            <description>optional remote cluster output location where inference output dump should be distcped as sequence files. When not specified results will be exported straight to the ActionManager HBase.</description>
        </property>
        <property>
            <name>output_remote_distcp_memory_mb</name>
            <value>6144</value>
            <description>memory for distcp action copying output sequence files to remote cluster</description>
        </property>
        <property>
            <name>output_remote_distcp_num_maps</name>
            <value>1</value>
            <description>maximum number of simultaneous copies to remote location</description>
        </property>
        <!-- entities exporting modes -->
        <property>
            <name>active_export_software</name>
            <description>flag indicating software entities should be exported</description>
        </property>
        <property>
            <name>active_export_patent</name>
            <value>false</value>
            <description>flag indicating patent entities should be exported</description>
        </property>
        <!-- action set id properties -->
        <property>
            <name>action_set_id</name>
            <value>$UNDEFINED$</value>
            <description>action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_similarities_standard</name>
            <value>$UNDEFINED$</value>
            <description>document_similarities_standard action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_matched_doc_organizations</name>
            <value>$UNDEFINED$</value>
            <description>matched document organizations action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_classes</name>
            <value>$UNDEFINED$</value>
            <description>document_classes action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_referencedProjects</name>
            <value>$UNDEFINED$</value>
            <description>document_referencedProjects action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_referencedDatasets</name>
            <value>$UNDEFINED$</value>
            <description>document_referencedDatasets action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_referencedDocuments</name>
            <value>$UNDEFINED$</value>
            <description>document_referencedDocuments action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_research_initiative</name>
            <value>$UNDEFINED$</value>
            <description>document research initiative action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_community</name>
            <value>$UNDEFINED$</value>
            <description>document community action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_pdb</name>
            <value>$UNDEFINED$</value>
            <description>document protein databank action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_document_software_url</name>
            <value>$UNDEFINED$</value>
            <description>document to software url action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_entity_software</name>
            <value>$UNDEFINED$</value>
            <description>action-set identifier of exported data containing software entities</description>
        </property>
        <property>
            <name>action_set_id_document_patent</name>
            <value>$UNDEFINED$</value>
            <description>document patent action-set identifier of exported data</description>
        </property>
        <property>
            <name>action_set_id_entity_patent</name>
            <value>$UNDEFINED$</value>
            <description>action-set identifier of exported data containing patent entities</description>
        </property>
        <!-- trust level threshold section -->
        <property>
            <name>trust_level_threshold</name>
            <value>$UNDEFINED$</value>
            <description>default trust level threshold of exported data</description>
        </property>
        <property>
            <name>trust_level_threshold_document_classes</name>
            <value>$UNDEFINED$</value>
            <description>document_classes trust level threshold</description>
        </property>
        <property>
            <name>trust_level_threshold_document_referencedProjects</name>
            <value>$UNDEFINED$</value>
            <description>document_referencedProjects trust level threshold</description>
        </property>
        <property>
            <name>trust_level_threshold_document_referencedDatasets</name>
            <value>$UNDEFINED$</value>
            <description>document_referencedDatasets trust level threshold</description>
        </property>
        <property>
            <name>trust_level_threshold_document_pdb</name>
            <value>$UNDEFINED$</value>
            <description>document to protein databank trust level threshold</description>
        </property>
        <property>
            <name>trust_level_threshold_document_software_url</name>
            <value>$UNDEFINED$</value>
            <description>document to software url trust level threshold</description>
        </property>
        <property>
            <name>trust_level_threshold_matched_doc_organizations</name>
            <value>$UNDEFINED$</value>
            <description>document to organization trust level threshold</description>
        </property>
        <property>
            <name>trust_level_threshold_document_patent</name>
            <value>$UNDEFINED$</value>
            <description>document to patent trust level threshold</description>
        </property>

        <!-- -->
        <property>
            <name>documentssimilarity_threshold</name>
            <value>$UNDEFINED$</value>
            <description>documents similarity threshold value below which similarity export is omitted</description>
        </property>
        <property>
            <name>referenceextraction_pdb_url_root</name>
            <value>$UNDEFINED$</value>
            <description>protein databank URL root part to be concatenated with pdb identifier when forming final URL</description>
        </property>
        <property>
            <name>patent_date_of_collection</name>
            <value>$UNDEFINED$</value>
            <description>date of collection of patent file formatted as yyyy-MM-dd'T'HH:mm</description>
        </property>
        <property>
            <name>patent_epo_url_root</name>
            <value>$UNDEFINED$</value>
            <description>EPO patent web archive URL root part to be concatenated with patent auth and nr when forming final URL</description>
        </property>
        <property>
            <name>output_report_root_path</name>
            <description>base directory for storing reports</description>
        </property>
        <!-- generic spark configuration -->
        <property>
            <name>sparkDriverMemory</name>
            <description>memory for driver process</description>
        </property>
        <property>
            <name>sparkExecutorMemory</name>
            <description>memory for individual executor</description>
        </property>
        <property>
            <name>sparkExecutorCores</name>
            <description>number of cores used by single executor</description>
        </property>
    </parameters>

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>

    <start to="export_actionmanager_sequencefile" />

    <action name="export_actionmanager_sequencefile">
        <sub-workflow>
            <app-path>${wf:appPath()}/export_actionmanager_sequencefile</app-path>
            <propagate-configuration />
            <configuration>
                <property>
                    <name>workingDir</name>
                    <value>${workingDir}/export_actionmanager_sequencefile/working_dir</value>
                </property>
                <property>
                    <name>output</name>
                    <value>${workingDir}/output</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="export_fork" />
        <error to="fail" />
    </action>

    <fork name="export_fork">
        <path start="decision_software_exporter"/>
        <path start="decision_patent_exporter"/>
    </fork>

    <!-- software references and entities export section -->
    <decision name="decision_software_exporter">
        <switch>
            <!-- exporting software relations and entities only when export flag is set AND input path was defined -->
            <case to="software_exporter">${active_export_software eq "true" and input_document_to_software_url ne "$UNDEFINED$"}</case>
            <default to="export_join" />
        </switch>
    </decision>
    
    <action name="software_exporter">
        <sub-workflow>
            <app-path>${wf:appPath()}/export_software</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>output_root_entities</name>
                    <value>${workingDir}/output/entities_software</value>
                </property>
                <property>
                    <name>output_root_relations</name>
                    <value>${workingDir}/output/document_software_url</value>
                </property>
                <!-- all the other required properties are automatically propagated -->
            </configuration>
        </sub-workflow>
        <ok to="export_join"/>
        <error to="fail"/>
    </action>

    <decision name="decision_patent_exporter">
        <switch>
            <case to="patent_exporter">${active_export_patent eq "true" and input_document_to_patent ne "$UNDEFINED$"}</case>
            <default to="export_join" />
        </switch>
    </decision>

    <action name="patent_exporter">
        <sub-workflow>
            <app-path>${wf:appPath()}/export_patent</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>output_root_relations</name>
                    <value>${workingDir}/output/document_patent</value>
                </property>
                <property>
                    <name>output_root_entities</name>
                    <value>${workingDir}/output/entities_patent</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="export_join"/>
        <error to="fail"/>
    </action>

    <join name="export_join" to="distcp_output"/>

    <action name="distcp_output">
        <distcp xmlns="uri:oozie:distcp-action:0.2">
            <arg>-Dmapreduce.map.memory.mb=${output_remote_distcp_memory_mb}</arg>
            <arg>-pb</arg>
            <arg>-overwrite</arg>
            <arg>-m ${output_remote_distcp_num_maps}</arg>
            <arg>${nameNode}${workingDir}/output</arg>
            <arg>${output_remote_location}</arg>
        </distcp>
        <ok to="end" />
        <error to="fail" />
    </action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>

    <end name="end" />
</workflow-app>
