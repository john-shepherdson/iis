<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-primary_report">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    <start to="producer" />
    
    
    <action name="producer">
        <java>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${workingDir}/producer" />
                <mkdir path="${nameNode}${workingDir}/producer" />
            </prepare>
            <!-- This is simple wrapper for the Java code -->
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
            
            <arg>-C{import_infospace_report,
                eu.dnetlib.iis.common.schemas.ReportEntry,
                eu/dnetlib/iis/wf/primary/report/test/input/import_infospace_report.json}
            </arg>
            <arg>-Oimport_infospace_report=${workingDir}/producer/report/import_info_space</arg>
            
            <arg>-C{document_classification_report,
                eu.dnetlib.iis.common.schemas.ReportEntry,
                eu/dnetlib/iis/wf/primary/report/test/input/document_classification_report.json}
            </arg>
            <arg>-Odocument_classification_report=${workingDir}/producer/report/document_classification</arg>
            
            <arg>-C{processing_times_report,
                eu.dnetlib.iis.common.schemas.ReportEntry,
                eu/dnetlib/iis/wf/primary/report/test/input/processing_times_report.json}
            </arg>
            <arg>-Oprocessing_times_report=${workingDir}/producer/report/processing_times</arg>
        </java>
        <ok to="primary_report" />
        <error to="fail" />
    </action>
    
    
    <action name="primary_report">
        <sub-workflow>
            <app-path>${wf:appPath()}/primary_report</app-path>
            <propagate-configuration />
            <configuration>
                <property>
                    <name>input_partial_reports</name>
                    <value>${workingDir}/producer/report</value>
                </property>
                <property>
                    <name>output_report</name>
                    <value>${workingDir}/output/report.json</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="consumer" />
        <error to="fail" />
    </action>
    
    
    <action name="consumer">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingJsonConsumer</arg>
            <arg>-C{report,eu/dnetlib/iis/wf/primary/report/test/expected_output/report.json}</arg>
            <arg>-Ireport=${workingDir}/output/report.json</arg>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>
    
    
    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    <end name="end" />
    
</workflow-app>